RUN ONCE "1:/lib/countdown".
RUN ONCE "1:/lib/log".
RUN ONCE "1:/lib/stage".
RUN ONCE "1:/lib/transfer".

PRINT( "===========================================" ).
PRINT( "        Venus Launch Script v0.6.2         " ).
PRINT( "===========================================" ).

FUNCTION GRAVITY_TURN_ANGLE
{
    SET RAWLERP TO ( ( SHIP:APOAPSIS - 22000 ) / 44000 ).
    SET LERP TO MIN( MAX( RAWLERP, 0.0 ), 1.0 ).
    
    RETURN 80 * ( 1.0 - LERP ).
}

FUNCTION GRAVITY_TURN_THROTTLE
{
    SET RAWLERP TO ( ( SHIP:APOAPSIS - 22000 ) / 44000 ).
    SET LERP TO MIN( MAX( RAWLERP, 0.0 ), 1.0 ).
    
    RETURN 0.8 + 0.2 * LERP.
}

FUNCTION LAUNCH
{
    PARAMETER HEIGHT.
    PARAMETER ANGLE.
    
    IF( ANGLE < 270 )
    {
        SET ANGLE TO ANGLE + 90.
    }
    ELSE
    { 
        SET ANGLE TO ANGLE - 270.
    }
    
    LOCK THROTTLE TO 1.
    
    ML( "Press 8 to launch to Minmus orbit." ).
    ML( "Press 9 to launch to Mun orbit." ).
    ML( "Press 0 to launch to Kerbin orbit." ).
    
    SET DONE TO 0.
    
    ON AG8
    {
        SET HEIGHT TO 100000.
        SET ANGLE TO 90.
        SET DONE TO 3.
    }
    
    ON AG9
    {
        SET HEIGHT TO 100000.
        SET ANGLE TO 90.
        SET DONE TO 2.
    }
    
    ON AG10
    {
        SET DONE TO 1.
    }
    
    WAIT UNTIL DONE > 0.
    
    COUNTDOWN().
    IGNITION_SEQUENCE().
    
    ML( "Steering locked to near vertical." ).
    
    HANDLE_SIMPLE_STAGE( 1.0, 89.8, ANGLE ).
    
    WAIT UNTIL SHIP:VELOCITY:SURFACE:MAG > 200.
    
    ML( "Adjusting angle slightly." ).
    ML( "Easing off throttle." ).
    
    HANDLE_SIMPLE_STAGE( 0.9, 89.5, ANGLE ).
    
    WAIT UNTIL SHIP:ALTITUDE > 8500.
    
    HANDLE_SIMPLE_STAGE( 0.85, 87.5, ANGLE ).
    
    WAIT UNTIL SHIP:ALTITUDE > 10000.
    
    ML( "Commencing gravity turn to reach orbital altitude" ).
    
    LOCK STEERING TO HEADING( ANGLE, GRAVITY_TURN_ANGLE() ).
    LOCK THROTTLE TO GRAVITY_TURN_THROTTLE().
    STAGE_SETUP().
        
    WAIT UNTIL SHIP:APOAPSIS > ( HEIGHT + 750 ).
    
    ML( "Coasting to altitude..." ).
    
    HANDLE_SIMPLE_STAGE( 0, 0, ANGLE ).
    
    WAIT UNTIL SHIP:ALTITUDE > 70250.
    
    ML( "Time warping." ).
    
    SET WARP TO 3.
    
    HANDLE_SIMPLE_STAGE( 0, 0, ANGLE ).
    
    WAIT UNTIL ETA:APOAPSIS < 120.
    
    ML( "Disabled time warp." ).
    
    SET WARP TO 0.
    
    HANDLE_SIMPLE_STAGE( 0, 0, ANGLE ).
    
    WAIT UNTIL ETA:APOAPSIS < 11.

    ML( "Executing orbital insertion burn." ).
    
    HANDLE_SIMPLE_STAGE( 1, 0, ANGLE ).
    
    WAIT UNTIL SHIP:PERIAPSIS > HEIGHT * 0.995.
    
    LOCK THROTTLE TO 0.

    ML( "Successfully entered Kerbin orbit." ).
    SET HEIGHT_ERROR TO SHIP:APOAPSIS - SHIP:PERIAPSIS.
    SET PERCENT_ERROR TO 50.0 * ( HEIGHT_ERROR / HEIGHT ).
    ML( "Difference in aspes is " + HEIGHT_ERROR + "m" ).
    ML( "Error in terms of target height = " + ROUND( PERCENT_ERROR, 3 ) + "%" ).
    
    IF( DONE = 2 )
    {
        // mun orbit
        TRANSFER_BURN( MUN, 244, ANGLE ).
    }
    ELSE IF( DONE = 3 )
    {
        // minmus orbit
        ML( "SE - TODO: minmus intercept and orbital insertion" ).
    }
    ELSE
    {
        ML( "Launch subroutine complete: Orbit reached." ).
    }
}
